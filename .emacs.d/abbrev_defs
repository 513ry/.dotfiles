;;-*-coding: utf-8;-*-
(define-abbrev-table 'Buffer-menu-mode-abbrev-table '())

(define-abbrev-table 'Custom-mode-abbrev-table '())

(define-abbrev-table 'Info-edit-mode-abbrev-table '())

(define-abbrev-table 'awk-mode-abbrev-table
  '(
   ))

(define-abbrev-table 'bookmark-bmenu-mode-abbrev-table '())

(define-abbrev-table 'bookmark-edit-annotation-mode-abbrev-table '())

(define-abbrev-table 'c++-mode-abbrev-table
  '(
   ))

(define-abbrev-table 'c-mode-abbrev-table
  '(
   ))

(define-abbrev-table 'change-log-mode-abbrev-table '())

(define-abbrev-table 'comint-mode-abbrev-table '())

(define-abbrev-table 'completion-list-mode-abbrev-table '())

(define-abbrev-table 'css-mode-abbrev-table '())

(define-abbrev-table 'diff-mode-abbrev-table '())

(define-abbrev-table 'edit-abbrevs-mode-abbrev-table '())

(define-abbrev-table 'elisp-byte-code-mode-abbrev-table '())

(define-abbrev-table 'emacs-lisp-mode-abbrev-table '())

(define-abbrev-table 'epa-info-mode-abbrev-table '())

(define-abbrev-table 'epa-key-list-mode-abbrev-table '())

(define-abbrev-table 'epa-key-mode-abbrev-table '())

(define-abbrev-table 'flycheck-error-list-mode-abbrev-table '())

(define-abbrev-table 'fundamental-mode-abbrev-table '())

(define-abbrev-table 'global-abbrev-table
  '(
    ("ds." "Daniel Sierpi≈Ñski" nil 0)
   ))

(define-abbrev-table 'helm-grep-mode-abbrev-table '())

(define-abbrev-table 'helm-major-mode-abbrev-table '())

(define-abbrev-table 'helm-moccur-mode-abbrev-table '())

(define-abbrev-table 'help-mode-abbrev-table '())

(define-abbrev-table 'html-mode-abbrev-table '())

(define-abbrev-table 'ibuffer-mode-abbrev-table '())

(define-abbrev-table 'idl-mode-abbrev-table '())

(define-abbrev-table 'java-mode-abbrev-table
  '(
   ))

(define-abbrev-table 'js-jsx-mode-abbrev-table '())

(define-abbrev-table 'js-mode-abbrev-table '())

(define-abbrev-table 'js2-jsx-mode-abbrev-table '())

(define-abbrev-table 'js2-mode-abbrev-table '())

(define-abbrev-table 'lisp-mode-abbrev-table '())

(define-abbrev-table 'log-edit-mode-abbrev-table '())

(define-abbrev-table 'magit-cherry-mode-abbrev-table '())

(define-abbrev-table 'magit-diff-mode-abbrev-table '())

(define-abbrev-table 'magit-log-mode-abbrev-table '())

(define-abbrev-table 'magit-log-select-mode-abbrev-table '())

(define-abbrev-table 'magit-merge-preview-mode-abbrev-table '())

(define-abbrev-table 'magit-mode-abbrev-table '())

(define-abbrev-table 'magit-popup-mode-abbrev-table '())

(define-abbrev-table 'magit-process-mode-abbrev-table '())

(define-abbrev-table 'magit-reflog-mode-abbrev-table '())

(define-abbrev-table 'magit-refs-mode-abbrev-table '())

(define-abbrev-table 'magit-repolist-mode-abbrev-table '())

(define-abbrev-table 'magit-revision-mode-abbrev-table '())

(define-abbrev-table 'magit-stash-mode-abbrev-table '())

(define-abbrev-table 'magit-stashes-mode-abbrev-table '())

(define-abbrev-table 'magit-status-mode-abbrev-table '())

(define-abbrev-table 'message-mode-abbrev-table '())

(define-abbrev-table 'messages-buffer-mode-abbrev-table '())

(define-abbrev-table 'objc-mode-abbrev-table
  '(
   ))

(define-abbrev-table 'occur-edit-mode-abbrev-table '())

(define-abbrev-table 'occur-mode-abbrev-table '())

(define-abbrev-table 'package-menu-mode-abbrev-table '())

(define-abbrev-table 'pdf-occur-buffer-mode-abbrev-table '())

(define-abbrev-table 'php-mode-abbrev-table
  '(
    ("ex" "extends" nil 1)
   ))

(define-abbrev-table 'pike-mode-abbrev-table
  '(
   ))

(define-abbrev-table 'process-menu-mode-abbrev-table '())

(define-abbrev-table 'prog-mode-abbrev-table '())

(define-abbrev-table 'scss-mode-abbrev-table '())

(define-abbrev-table 'select-tags-table-mode-abbrev-table '())

(define-abbrev-table 'sgml-mode-abbrev-table '())

(define-abbrev-table 'shell-mode-abbrev-table '())

(define-abbrev-table 'skewer-clients-mode-abbrev-table '())

(define-abbrev-table 'skewer-error-mode-abbrev-table '())

(define-abbrev-table 'snippet-mode-abbrev-table '())

(define-abbrev-table 'special-mode-abbrev-table '())

(define-abbrev-table 'speedbar-mode-abbrev-table '())

(define-abbrev-table 'tablist-mode-abbrev-table '())

(define-abbrev-table 'tabulated-list-mode-abbrev-table '())

(define-abbrev-table 'text-mode-abbrev-table '())

(define-abbrev-table 'url-cookie-mode-abbrev-table '())

(define-abbrev-table 'vc-git-log-edit-mode-abbrev-table '())

(define-abbrev-table 'vc-git-log-view-mode-abbrev-table '())

(define-abbrev-table 'vc-git-region-history-mode-abbrev-table '())

(define-abbrev-table 'xah-css-mode-abbrev-table
  '(
    ("aqua3" "#00ffff" xah-css--ahf 0)
    ("b" "border;" xah-css--ahf 0)
    ("background-color" "background-color: silver;" xah-css--ahf 0)
    ("background-image" "background-image: url(\"[url]\");" xah-css--ahf 0)
    ("background-position-x" "background-position-x: 9px;" xah-css--ahf 0)
    ("background-position-y" "background-position-y: 9px;" xah-css--ahf 0)
    ("background-size" "background-size: 500px;" xah-css--ahf 0)
    ("bbc" "border-bottom-color" xah-css--ahf 0)
    ("bbs" "border-bottom-style" xah-css--ahf 0)
    ("bbw" "border-bottom-width" xah-css--ahf 0)
    ("bc" "background-color" xah-css--ahf 0)
    ("bgc" "background-color" xah-css--ahf 0)
    ("bi" "background-image" xah-css--ahf 0)
    ("black3" "#000000" xah-css--ahf 0)
    ("blc" "border-left-color" xah-css--ahf 0)
    ("bls" "border-left-style" xah-css--ahf 0)
    ("blue3" "#0000ff" xah-css--ahf 0)
    ("blw" "border-left-width" xah-css--ahf 0)
    ("border" "border: solid thin gray;" xah-css--ahf 0)
    ("border-bottom-color" "border-bottom-color: blue;" xah-css--ahf 0)
    ("border-bottom-style" "border-bottom-style: none hidden dotted dashed solid double groove ridge inset outset inherit initial unset;" xah-css--ahf 0)
    ("border-bottom-width" "border-bottom-width: 2px;" xah-css--ahf 0)
    ("border-left-color" "border-left-color: red;" xah-css--ahf 0)
    ("border-left-style" "border-left-style: none hidden dotted dashed solid double groove ridge inset outset inherit initial unset;" xah-css--ahf 0)
    ("border-left-width" "border-left-width: 3px;" xah-css--ahf 0)
    ("border-radius" "border-radius: 1rem;" xah-css--ahf 0)
    ("border-right-color" "border-right-color: red;" xah-css--ahf 0)
    ("border-right-style" "border-right-style: 3px;" xah-css--ahf 0)
    ("border-right-width" "border-right-width: 3px;" xah-css--ahf 0)
    ("border-top-color" "border-top-color: red;" xah-css--ahf 0)
    ("border-top-style" "border-top-style: none hidden dotted dashed solid double groove ridge inset outset inherit initial unset;" xah-css--ahf 0)
    ("border-top-width" "border-top-width: 3px;" xah-css--ahf 0)
    ("box-shadow" "box-shadow: 3px 3px 4px 2px grey;" xah-css--ahf 0)
    ("bpx" "background-position-x" xah-css--ahf 0)
    ("bpy" "background-position-y" xah-css--ahf 0)
    ("br" "border-radius: 1rem;" xah-css--ahf 0)
    ("brc" "border-right-color" xah-css--ahf 0)
    ("brs" "border-right-style" xah-css--ahf 0)
    ("brw" "border-right-width" xah-css--ahf 0)
    ("bs" "background-size" xah-css--ahf 0)
    ("btc" "border-top-color" xah-css--ahf 0)
    ("bts" "border-top-style" xah-css--ahf 0)
    ("btw" "border-top-width" xah-css--ahf 0)
    ("c" "color" xah-css--ahf 0)
    ("clear" "clear: both left right none initial inherit;" xah-css--ahf 0)
    ("color" "color: red;" xah-css--ahf 0)
    ("cursor" "cursor: pointer;" xah-css--ahf 0)
    ("d" "display" xah-css--ahf 0)
    ("display" "display: inline-block;" xah-css--ahf 0)
    ("ff" "font-family" xah-css--ahf 0)
    ("first-letter" "first-letter {font-size: 2rem;}" xah-css--ahf 0)
    ("fl" "first-letter" xah-css--ahf 0)
    ("float" "float: none left right initial inherit;" xah-css--ahf 0)
    ("font-family" "font-family: Arial, sans-serif;" xah-css--ahf 0)
    ("font-size" "font-size: 2rem;" xah-css--ahf 0)
    ("font-weight" "font-weight: normal bold;" xah-css--ahf 0)
    ("fs" "font-size" xah-css--ahf 0)
    ("fuchsia3" "#ff00ff" xah-css--ahf 0)
    ("fw" "font-weight" xah-css--ahf 0)
    ("gray3" "#808080" xah-css--ahf 0)
    ("green3" "#008000" xah-css--ahf 0)
    ("h" "height" xah-css--ahf 0)
    ("height" "height: 200px;" xah-css--ahf 0)
    ("left" "left: 99px;" xah-css--ahf 0)
    ("lh" "line-height" xah-css--ahf 0)
    ("lime3" "#00ff00" xah-css--ahf 0)
    ("line-height" "line-height: 1.5;" xah-css--ahf 0)
    ("list-style-type" "list-style-type: disc square circle decimal lower-roman upper-roman lower-alpha upper-alpha;" xah-css--ahf 0)
    ("lst" "list-style-type" xah-css--ahf 0)
    ("m" "margin: 1rem;" xah-css--ahf 0)
    ("margin" "margin: 0.5rem;" xah-css--ahf 0)
    ("margin-bottom" "margin-bottom: 1rem;" xah-css--ahf 0)
    ("margin-left" "margin-left: 1rem;" xah-css--ahf 0)
    ("margin-right" "margin-right: 1rem;" xah-css--ahf 0)
    ("margin-top" "margin-top: 1rem;" xah-css--ahf 0)
    ("maroon3" "#800000" xah-css--ahf 0)
    ("max-height" "max-height: 17rem;" xah-css--ahf 0)
    ("max-width" "max-width: 17rem;" xah-css--ahf 0)
    ("mb" "margin-bottom" xah-css--ahf 0)
    ("mh" "max-height" xah-css--ahf 0)
    ("ml" "margin-left" xah-css--ahf 0)
    ("mr" "margin-right" xah-css--ahf 0)
    ("mt" "margin-top" xah-css--ahf 0)
    ("mw" "max-width" xah-css--ahf 0)
    ("navy3" "#000080" xah-css--ahf 0)
    ("olive3" "#808000" xah-css--ahf 0)
    ("opacity" "opacity: 1;" xah-css--ahf 0)
    ("orange3" "#ffa500" xah-css--ahf 0)
    ("p" "position" xah-css--ahf 0)
    ("padding" "padding: 0.5rem;" xah-css--ahf 0)
    ("padding-bottom" "padding-bottom: 1rem;" xah-css--ahf 0)
    ("padding-left" "padding-left: 1rem;" xah-css--ahf 0)
    ("padding-right" "padding-right: 1rem;" xah-css--ahf 0)
    ("padding-top" "padding-top: 1rem;" xah-css--ahf 0)
    ("pb" "padding-bottom" xah-css--ahf 0)
    ("pd" "padding" xah-css--ahf 0)
    ("pl" "padding-left" xah-css--ahf 0)
    ("position" "position: static absolute fixed relative initial inherit;" xah-css--ahf 0)
    ("pr" "padding-right" xah-css--ahf 0)
    ("pt" "padding-top" xah-css--ahf 0)
    ("purple3" "#800080" xah-css--ahf 0)
    ("red3" "#ff0000" xah-css--ahf 0)
    ("rgb" "rgb(‚ñÆ)" xah-css--ahf 0)
    ("rgba" "rgba(‚ñÆ)" xah-css--ahf 0)
    ("rotate" "rotate(‚ñÆ9deg)" xah-css--ahf 0)
    ("rotate3d" "rotate3d(‚ñÆ)" xah-css--ahf 0)
    ("rotateX" "rotateX(‚ñÆ)" xah-css--ahf 0)
    ("rotateY" "rotateY(‚ñÆ)" xah-css--ahf 0)
    ("rotateZ" "rotateZ(‚ñÆ)" xah-css--ahf 0)
    ("scale" "scale(‚ñÆ)" xah-css--ahf 0)
    ("scale3d" "scale3d(‚ñÆ)" xah-css--ahf 0)
    ("scaleX" "scaleX(‚ñÆ)" xah-css--ahf 0)
    ("scaleY" "scaleY(‚ñÆ)" xah-css--ahf 0)
    ("scaleZ" "scaleZ(‚ñÆ)" xah-css--ahf 0)
    ("silver3" "#c0c0c0" xah-css--ahf 0)
    ("skew" "skew(‚ñÆ9deg)" xah-css--ahf 0)
    ("skewX" "skewX(‚ñÆ)" xah-css--ahf 0)
    ("skewY" "skewY(‚ñÆ)" xah-css--ahf 0)
    ("steps" "steps(‚ñÆ)" xah-css--ahf 0)
    ("t" "top: 99px;" xah-css--ahf 0)
    ("ta" "text-align" xah-css--ahf 0)
    ("teal3" "#008080" xah-css--ahf 0)
    ("text-align" "text-align: left right center justify;" xah-css--ahf 0)
    ("text-shadow" "text-shadow: 3px 3px 3px grey" xah-css--ahf 0)
    ("top" "top: 99px;" xah-css--ahf 0)
    ("translate" "translate(‚ñÆpx,‚ñÆpx)" xah-css--ahf 0)
    ("translate3d" "translate3d(‚ñÆ)" xah-css--ahf 0)
    ("translateX" "translateX(‚ñÆ)" xah-css--ahf 0)
    ("translateY" "translateY(‚ñÆ)" xah-css--ahf 0)
    ("translateZ" "translateZ(‚ñÆ)" xah-css--ahf 0)
    ("ts" "text-shadow" xah-css--ahf 0)
    ("v" "visibility" xah-css--ahf 0)
    ("va" "vertical-align" xah-css--ahf 0)
    ("vertical-align" "vertical-align: 3px;" xah-css--ahf 0)
    ("visibility" "visibility: hidden visible;" xah-css--ahf 0)
    ("w" "width" xah-css--ahf 0)
    ("white-space" "white-space: pre-wrap" xah-css--ahf 0)
    ("white3" "#ffffff" xah-css--ahf 0)
    ("width" "width: 200px;" xah-css--ahf 0)
    ("ws" "white-space" xah-css--ahf 0)
    ("yellow3" "#ffff00" xah-css--ahf 0)
    ("z-index" "z-index: 53475;" xah-css--ahf 0)
    ("zi" "z-index" xah-css--ahf 0)
   ))

(define-abbrev-table 'xref--xref-buffer-mode-abbrev-table '())

